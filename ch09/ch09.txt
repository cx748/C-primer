容器操作

类型别名
interator                    此容器类型的迭代器类型
const_iterator               可以读取元素，但是不可以修改元素的迭代器类型
size_type                    无符号整数类型，足够保存容器类型最大的可能容器的大小
difference_type              带符号整数类型，足够保存两个迭代器之间的距离
value_type                   元素类型
reference                    元素的左值类型，与value_type&的含义相同
const_reference              元素的const左值类型(既，const value_type&)

构造函数
C c;                         默认构造函数，构造空容器
C c1(c2);                    构造c2的拷贝c1
C c(b,e);                    构造c,将迭代器b和e指定的范围内的元素拷贝到c
C c(a,b,c...)；              列表初始化c
C seq(n);                    seq包含n个元素，这些元素进行了值初始化化
c seq(n,t);                  seq包含n个初始化值为t的元素

赋值与swap
a.swap(b)                   交换a和b的元素
swap（a,b）                 交换a和b的元素

大小
c.size()                    c中元素的数目（不支持forward_list）
c.max_size()                c可保存的最大元素数目
e.empty（）                 若c中存储了元素，返回false，否则返回true


添加/删除元素(不适用于array)
c.insert(args)              将args中的元素拷贝进c
c.emplace(inits)            使用inits构造c中的一个元素
c.erase(args)               删除args指定的元素
c.clear()                   删除c中所有元素,返回void。
c.pop_back()                删除c中尾元素，若c为空，则函数行为未定义，返回void
c.pop_front()               删除c中首元素....
c.erase(p)                  删除迭代器p所指定元素，返回一个指向被删
                            元素之后元素的迭代器。
c.erase(b,e)                删除迭代器b,e所知范围内的元素，返回一个
                            指向最后一个被删元素之后元素的迭代器。

获取迭代器
c.begin(), c.end;          return the fornt and back place
c.cbegin, c.cend;          返回const_iterator
reverse_iterator  ;         按逆序寻址元素的迭代器
const_reverse_iteraror;     不能修改元素的迭代器
c.rbegin(),c.end();         返回指向c的尾元素和首元素之前位置的迭代器
c,crbegin(),c.crend;        返回const_reverse_iterator


